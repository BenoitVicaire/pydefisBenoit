
motif="MNGHNNNNNKRRBNN"
sequences_raw="""AGGCUGCGGGAACAG
AUGUGGCGGGGAUGA
AAGAAUCCUUGGUAU
ACGAAUGAUGGGCCU
AUGUACGAGGAGCCU
CUGUUUAUGGGACAU
CUGAUUUCGUGACUA
CCGUAAGGCUGGCAC
AAGUGUAAUGGAGCG
AUGCACUUGUAACGC
AAGCUAAUUGGGUGU
ACGAAAAUCUGACUA
CGGCGUCGAGGAGGU
ACGCUAAGCUAGGGC
AUGCAUUGAGUAGCC
AAGUCAAUAUGACUC
AAGCUACUAGGAUCC
CAGUGACCAUAGUGU
AAGCCGCCUUGGCCC
CGGAAAGCGGGUGUU
AGGAUUAAGUAAUCC
AGGACAACGUAGCGC
CCGAGGAACUGAUCU
CUGUACAACUGAUCA
ACGAUAUUAUAAGUU
CAGAGACUCGAACGG
ACGUCUUGAGAAGCC
AUGAUAGGCUGAUCU
CAGAGUGCGUGGCGU
AGGCCGCGUUAGGCG
AAGCAGAUGUAGUUU
CUGCGCUCAUGGUGC
CCGCACCGUGAAGGA
CCGUGCGUAGGGCUG
AUGACACUGGGGUUA
ACGCCCGCCUGAUAA
CGGUACCCAGGAGAA
CUGCUAGGAGAAGGG
CGGCCACCGUGAUCU
AAGUUAUCGGGAGUA
CGGUCCCCUGAAGGA
AAGACCUCGGGGGUG
AUGCGUUAAUGACAC
AGGUUACGGUAAGAC
CGGUGAAUAGAAUUC
AGGCAUAUUUAAUUA
CUGCGUCAAUAAUUA
AUGUCGGAUGAACGA
CUGCCAGAUUGACCG
AAGCGUCGAGGACUA
ACGAACCCCUGAUAU
AGGCGGCGUGGAGAC
UAGCCAUAAUAACCA
AGGACGCCAUAGGCA
ACGACUCAGGAGGAA
ACGAGGCGCUAGUUC
AGGUUCGACGGGGGA
CAGAGCCUCAAGGGA
AGGUAACUCGAGUCA
CCGUGCUAGUGGUGU
AGGCACUAAGAGUUU
CAGCCUGGUUGAGUU
AAGAAUACUUGACAC
CGGACAGAUGGACUU
CCGUUCGCGUAAUGC
AAGCUGUCUUAAGGC
GAGUGGUCAUAAGCC
CGGCUCUCCCAAUGU
AAGAUAAAGGAGUUC
AGGUCUGCGGAGCAC
CUGAACAUUGAGCCU
AUGCACCUGGAGGUG
CAGUCGUGCUAGUAC
AUGCAUCUCGGACUC
CAGAAUUAAGGAGGU
ACGUAGGGAGGGCCC
CUGACGUCGUAGGUU
CGGUCGCGAGGGGUA
AUGUAGGGGUAGCAG
ACGCUCCACUAGUAC
CGGAGACUAGAGUAC
CUGACAGUUUGAUCG
CGGUCCAACGAGGAA
CUGUCGCUUUGAGAU
AGGACUUAUUAAGAG
AUGCACUAUGGGCGG
ACGUGACUUGAGUCA
ACGCAGGGUGGGCGA
AAGCGGUGCUAAUGU
CUGACCAGUUAAGAG
AUGCUCAGCGAGCCC
AGGACGUAAUGGGUU
AUGCCUGGUUGAGUG
AGGUUUGCAGGACAU
CGGUAGAAGGUAGUU
AGGAAGAACUAGUGU
AGGCCUACCGGGCUA
CCGACUGGCUAACCG
CCGCCCCAAGAGUAA
ACGCGAGCGUGACUC
ACGAUCGUGUAGCGA
AAGUUUUAUUAGGAC
CGGACACUGUAGGGU
AAGCCUUUGGAGGAC
CGGCUCGAGUAGUAC
AGGUUGGUGGGAACC
ACGAUCAUGGGGUCU
CCGCCCGAGGAGUCC
AAGUCUUACGAACGG
AUGUACAGUUGACGC
CGGUGAGUAGGGGGU
AAGCAUUCUUGGCCA
CGGUCGUGUUGGGAA
AGGCGAUCAGGAUUG
AUGUGCCGCUGAGCA
CGGUUGACCGGACGC
CCGUUCGGAGAAUGC
CGGUGAAUCUAGCGU
ACGCUGUAGUAGUAG
CCGAGGCUAUGAGAU
AAGAAGCCCUCGGGC
AAGAUGAUGGAGGGU
AGGCAUCAUGGGGCA
CUGCCUCAAUGGCUA
AUGCUCGCGGGGGAU
AGGAGCGAUUAGCGU
AUGAUGACAUAAGGC
AAGUACGGAGAAGGC
CAGCCCUGAUGAGGU
CCGAACUCUUAGGUG
AAGAGAUGUGAACUG
CCGAGGACGGAAUUU
AGGUUCCAUAGGUGC
AUGAAGGCCGAAUAU
AUGUCAAAAUGAUUG
CAGUCCGUGGGACAG
UCGCAGGGUGAGUUG
AUGAACCAGUAAGGU
CAGAUUUAAUGAUUA
CAGAGAUCUUGACGA
CUGAGCUUGUAAGAG
CGGAGAACAGGGGAG
CUGCCUAGUUGACCA
CGGCAACCGGAGCGC
AUGACCUCUUAGUAU
CCGCAUCGAUAGUGA
AGGCGUGUAUGACUG
AGGAACAUUGGGUAU
CGGAUUGAUUGAGGA
CGGCGGUUCGGAGUC
ACGCAUGCUGGAUUC
AAGCCUAGAUGACGA
AUGCAGGGUUGACCU
ACGAAGAGAUGAGGC
CGGACAAGGGAAGGA
CAGCUGUUGGAGGCG
AAGUAAUAGGGACGU
CAGAUCUCGGGGUCA
AGGUGUUUUUGGGUG
ACGCGACCUUGACCA
AGGACAGGGGAGCCG
AGGUUUGCUGGAGAC
ACGCAGCACGGGGGG
AUGGUCGCGUAACGU
AGGAGGUAAUGGUCC
CAGUCCUUAGAGGGA
AGGCCAAGUAAACCC
CUGCAGUACGAAUGA
CGGAUCAAGUAGGCU
CUGUUUUAUUGACCA
ACGCCUUUAUCGCCU
AAGAAAAGGGGGGGC
AUGACAGCUGGGUAC
CGGCAUAGAUGGGGA
CGGCUCUCAGGGCGG
AGGACGCCCGAAGAU
ACGUCACGCUGGCCC
AAGUUAUUAGGAUGU
CCGCAACUAGAAGAC
AUGAUGAAAGGACUA
AUCUAAUGAGGGUCC
CCGAUCGUCUGCUUC
AGGCAUCACGAAGAA
CAGCGAGCAGAGUCC
CGGCGUAUAGAGGCC
ACGCAAUGCUAGUUA
ACGUAACGUGGGCAC
AUGUCGCACGAAUAC
CAGUUUUGCGGGUAC
AGGAAUGCAUAAGUA
AGGUAUCACGGAGUC
AUGUGCAAAGGACGG
CCGAGAACCGGAUCG
CCGAGGUACGGGCUU
ACGAAUAUAGAAUUC
AUGACUGAAGAACGU
AAGCUGACGUAGCGU
CCGCCGCUCGAAUUU
CGGUUUCAAUAGCAA
AAGACCGUAUAGCCA
ACGUACAAUUAAGCA
CCGAGCUACAGUCGU
CAGUUUUUAGAAUCC
AGGCUCGUGGGACCG
CGGCACCCAGGAUAC
AGGUACUCGUAGUCC
CCGAUGGUGUGGCCU
AGGAGUCCAGGAGUG
AAGCAGCGGUAGUAA
CAGGGCACAUAAGCG
AAGCGGCCUGAGUAA
AGGAUAACUCGGCGC
CUGCGCACGUGAUAC
CGGCCGCGAGGACUG
ACGACCUCGUAACCG
AGGAAUGCCUAAUUC
CAGUCCCAAGGGGGA
CGGCCUAGGGAAGAA
CAGUCACGGUAGGUU
CGGAUCCCAUGGCAC
ACGCCCUAGUAAUUG
CUGCGUGGGUGACUG
AAGUAGUUUUAAGUC
CGGCUUUAAUAGGCG
CCGUUUAUAUAGCCA
AAGCGGGACUAGUUG
CAGACCGUGGGGUUG
CCGUUGCCUUGAUUA
AGGCACCAGGGAUUU
CUGCCAUUUGGAGGC
ACGAUAUCGUGCCCC
ACGCACCCUUGGCCC
CCGUUGAUAUAGGUA
ACGAAGCCGUAACAC
CGGCUUCAAUGAUCU
CCGCCUUGGUGAUUG
ACGAAAAUAUGGUGU
CCGCUGCGCGAGUUC
CUGUAAUAAUAAGCU
AUGACGACUGAAUCG
AAGCUUGGAGAAGCA
AGGAAAAAGUGGUCC
CUGAAGAAAUGAGCG
AAGUACACUUGAUAA
CUGCACCCGGAAUAA
ACGUGAGGUUGACGA
CCGCUUGUUGGGCUG
AAGACCUGCUAAUCA
CAGAAACUUCGGCGG
CUGAUGGCAUAGGUU
ACGAACGCUGAGCCU
CAGACAUUCGAGUAA
CUGAUUGCAGAAGUC
CCGCUGGCUUGGGUG
CAGACCGCUGAAUUC
AAGAAUAACUAGCGC"""

# # test
# motif="NGKWAR"
# sequences_raw="""AGAAAA
# GAUCAA
# AGUAAG
# UGGUAG
# UGUUAG
# GGUAAA
# AGGUAG
# CGGAAG
# GGGAAG"""


sequences_refined=sequences_raw.split("\n")

# Dictionaire des symboles
dict_symbole ={
    "R":["A","G"],
    "Y":["C","U"],
    "K":["G","U"],
    "M":["A","C"],
    "S":["C","G"],
    "W":["A","U"],
    "B":["C","G","U"],
    "D":["A","G","U"],
    "H":["A","C","U"],
    "V":["A","C","G"],
    "N":["A","C","G","U"]
}
base = ["A","C","G","U"]

def is_sequence_from_motif(sequence,motif):
    for i in range(len(sequence)-1):
        if (motif[i] in base):
            if (sequence[i]!=motif[i]):
                return False
        else :
            if(sequence[i] not in dict_symbole[motif[i]]):
                return False
    return True
            

print(is_sequence_from_motif("AGUAAG",motif))

count=0
for element in sequences_refined:
    if (is_sequence_from_motif(element,motif)==True):
        count+=1

print(count)

